{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAoBC,SAASC,cAAc,SAC3CC,EAAmBF,SAASC,cAAc,UAC1CE,EAAO,GAETC,EAAa,KAEjBD,EAAKE,SAAW,EAEhBN,EAAkBO,iBAAiB,UAQnC,SAAkBC,GAChBA,EAAEC,iBAEFN,EAAiBO,UAAW,EAM5BC,WAAWC,EAAYR,EAAKS,UAhB9Bb,EAAkBO,iBAAiB,SAEnC,SAAiBC,GACfJ,EAAKI,EAAEM,OAAOC,MAAQC,OAAOC,SAAST,EAAEM,OAAOI,UAgBjD,IAAMN,EAAa,WAEjBP,EAAac,aAAY,WAGvB,GAAIf,EAAKE,WAAaF,EAAKgB,OAAS,EAGlC,OAFAC,cAAchB,QACdF,EAAiBO,UAAW,GAId,IAAIY,SAAQ,SAACC,EAASC,GACdC,KAAKC,SAAW,GAEpCH,EAAQnB,GAERoB,EAAOpB,MAKVuB,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUO,EAAKe,EAALf,MACjBgB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANnB,EAAM,OACpEoB,QAAMC,IAAI,uBAAwCF,OAAf1B,EAAS,QAAY0B,OAANnB,EAAM,OACxDoB,QAAMC,IAAI,QAEbC,OAAM,SAAAP,G,IAAGtB,EAAQsB,EAARtB,SAAUO,EAAKe,EAALf,MAClBgB,EAAA/B,GAASgC,OAAOM,QAAQ,sBAAuCJ,OAAf1B,EAAS,QAAY0B,OAANnB,EAAM,OACnEoB,QAAMC,IAAI,sBAAuCF,OAAf1B,EAAS,QAAY0B,OAANnB,EAAM,OACvDoB,QAAMC,IAAI,QAEbG,SAAQ,WACPjC,EAAKE,UAAY,EACjBF,EAAKS,OAAST,EAAKkC,UAEpBlC,EAAKkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst createPromiseForm = document.querySelector('.form');\nconst createPromiseBtn = document.querySelector('button');\nconst data = {};\n\nlet intervalId = null;\nlet DELAY = null;\ndata.position = 1;\n\ncreatePromiseForm.addEventListener('submit', onSubmit);\ncreatePromiseForm.addEventListener('input', onInput);\n\nfunction onInput(e) {\n  data[e.target.name] = Number.parseInt(e.target.value)\n  \n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  \n  createPromiseBtn.disabled = true\n  \n  startTimeout()\n}\n\nfunction startTimeout() {\n  setTimeout(makePromis, data.delay);\n}\n\nconst makePromis = () => {\n\n  intervalId = setInterval(() => {\n  \n\n    if (data.position === data.amount + 1) {\n      clearInterval(intervalId)\n      createPromiseBtn.disabled = false\n      return;\n    }\n    \n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(data)\n      } else {\n        reject(data)\n      }\n    })\n\n    promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log('✅')\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      console.log('❌')\n    })\n    .finally(() => {\n      data.position += 1;\n      data.delay += data.step\n    });\n  }, data.step);\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromiseForm","document","querySelector","$ce04d3a99e08e73b$var$createPromiseBtn","$ce04d3a99e08e73b$var$data","$ce04d3a99e08e73b$var$intervalId","position","addEventListener","e","preventDefault","disabled","setTimeout","$ce04d3a99e08e73b$var$makePromis","delay","target","name","Number","parseInt","value","setInterval","amount","clearInterval","Promise","resolve","reject","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure","finally","step"],"version":3,"file":"03-promises.dab50f88.js.map"}