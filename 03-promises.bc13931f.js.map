{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAoBC,SAASC,cAAc,SAC3CC,EAAmBF,SAASC,cAAc,UAC1CE,EAAO,GAEb,IAAIC,EAAa,KAEjBD,EAAKE,SAAW,EAEhBN,EAAkBO,iBAAiB,UAQnC,SAAkBC,GAChBA,EAAEC,iBAEFN,EAAiBO,UAAW,EAM5BC,WAAWC,EAAYR,EAAKS,UAhB9Bb,EAAkBO,iBAAiB,SAEnC,SAAiBC,GACfJ,EAAKI,EAAEM,OAAOC,MAAQC,OAAOC,SAAST,EAAEM,OAAOI,UAgBjD,MAAMN,EAAa,KAEjBP,EAAac,aAAY,KAGvB,GAAIf,EAAKE,WAAaF,EAAKgB,OAAS,EAGlC,OAFAC,cAAchB,QACdF,EAAiBO,UAAW,GAId,IAAIY,SAAQ,CAACC,EAASC,KACdC,KAAKC,SAAW,GAEpCH,EAAQnB,GAERoB,EAAOpB,MAKVuB,MAAK,EAACrB,SAAEA,EAAQO,MAAEA,MACjBe,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBxB,QAAiBO,OAC5DkB,QAAMC,IAAI,uBAAqB1B,QAAiBO,OAChDkB,QAAMC,IAAI,QAEbC,OAAM,EAAC3B,SAAEA,EAAQO,MAAEA,MAClBe,EAAA9B,GAAS+B,OAAOK,QAAQ,sBAAoB5B,QAAiBO,OAC3DkB,QAAMC,IAAI,sBAAoB1B,QAAiBO,OAC/CkB,QAAMC,IAAI,QAEbG,SAAQ,KACP/B,EAAKE,UAAY,EACjBF,EAAKS,OAAST,EAAKgC,UAEpBhC,EAAKgC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst createPromiseForm = document.querySelector('.form');\nconst createPromiseBtn = document.querySelector('button');\nconst data = {};\n\nlet intervalId = null;\nlet DELAY = null;\ndata.position = 1;\n\ncreatePromiseForm.addEventListener('submit', onSubmit);\ncreatePromiseForm.addEventListener('input', onInput);\n\nfunction onInput(e) {\n  data[e.target.name] = Number.parseInt(e.target.value)\n  \n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  \n  createPromiseBtn.disabled = true\n  \n  startTimeout()\n}\n\nfunction startTimeout() {\n  setTimeout(makePromis, data.delay);\n}\n\nconst makePromis = () => {\n\n  intervalId = setInterval(() => {\n  \n\n    if (data.position === data.amount + 1) {\n      clearInterval(intervalId)\n      createPromiseBtn.disabled = false\n      return;\n    }\n    \n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(data)\n      } else {\n        reject(data)\n      }\n    })\n\n    promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log('✅')\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      console.log('❌')\n    })\n    .finally(() => {\n      data.position += 1;\n      data.delay += data.step\n    });\n  }, data.step);\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromiseForm","document","querySelector","$47d4ff9957288465$var$createPromiseBtn","$47d4ff9957288465$var$data","$47d4ff9957288465$var$intervalId","position","addEventListener","e","preventDefault","disabled","setTimeout","$47d4ff9957288465$var$makePromis","delay","target","name","Number","parseInt","value","setInterval","amount","clearInterval","Promise","resolve","reject","Math","random","then","$parcel$interopDefault","Notify","success","console","log","catch","failure","finally","step"],"version":3,"file":"03-promises.bc13931f.js.map"}